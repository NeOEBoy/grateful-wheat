{"version":3,"sources":["api/api.js","view/productSale.js","view/productDiscard.js","routerApp.js","serviceWorker.js","index.js"],"names":["console","log","KApiHost","getProductSaleList","userId","beginDateTime","endDateTime","pageIndex","pageSize","keyword","a","productSaleUrl","fetch","productSaleResponse","json","productSaleJson","getProductDiscardList","date","productDiscardUrl","productDiscardResponse","productDiscardJson","Search","Input","RangePicker","DatePicker","KShopArray","index","name","ProductSale","props","handleInfiniteOnLoad","fetchNextPage","query","get","replace","state","listData","loading","hasMore","shopIndex","this","initFirstPage","length","setState","undefined","message","warning","saleList","productSale","errCode","list","newHasMore","newPageIndex","concat","shopName","style","height","window","innerHeight","overflow","textAlign","fontSize","fontWeight","overlay","shop0","shop1","shop2","shop3","shop4","onClick","key","Item","trigger","size","width","e","preventDefault","DownOutlined","locale","bordered","placeholder","inputReadOnly","defaultValue","moment","showTime","hideDisabledOptions","showHour","showMinute","showSecond","onChange","data","onOk","format","enterButton","onSearch","value","initialLoad","pageStart","loadMore","useWindow","dataSource","emptyText","footer","renderItem","item","indexOf","indexDivBC","specification","category","backgroundColor","color","marginRight","marginLeft","borderRadius","marginTop","Meta","title","description","saleNumber","currentNumber","realIncome","position","bottom","React","Component","ProductDiscard","fetchListData","discardList","productDiscard","header","discardNumber","diacardMoney","Inside4QueryParams","URLSearchParams","useLocation","search","exact","path","children","RouterApp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c7f0fd72.chunk.js","sourcesContent":["\r\nconsole.log('process.env.NODE_ENV = ' + process.env.NODE_ENV);\r\n\r\n/**--------------------配置信息--------------------*/\r\nconst KApiHost = process.env.NODE_ENV === 'development' ?\r\n  'http://localhost:9001' : 'http://gratefulwheat.ruyue.xyz/apis';\r\n\r\nconst getProductSaleList = async (userId, beginDateTime, endDateTime, pageIndex, pageSize, keyword) => {\r\n  let productSaleUrl = KApiHost + '/product/saleList';\r\n  productSaleUrl += '?pageIndex=';\r\n  productSaleUrl += pageIndex;\r\n  productSaleUrl += '&pageSize=';\r\n  productSaleUrl += pageSize;\r\n  productSaleUrl += '&userId=';\r\n  productSaleUrl += userId;\r\n  productSaleUrl += '&beginDateTime=';\r\n  productSaleUrl += beginDateTime;\r\n  productSaleUrl += '&endDateTime=';\r\n  productSaleUrl += endDateTime;\r\n  productSaleUrl += '&keyword=';\r\n  productSaleUrl += keyword;\r\n  \r\n  const productSaleResponse = await fetch(productSaleUrl);\r\n  const productSaleJson = await productSaleResponse.json();\r\n  return productSaleJson;\r\n}\r\n\r\nconst getProductDiscardList = async (userId, date) => {\r\n  // console.log('getProductDiscardList begin');\r\n  let productDiscardUrl = KApiHost + '/product/discardList';\r\n  productDiscardUrl += '?userId=';\r\n  productDiscardUrl += userId;\r\n  productDiscardUrl += '&date=';\r\n  productDiscardUrl += date;\r\n  console.log(productDiscardUrl);\r\n\r\n  const productDiscardResponse = await fetch(productDiscardUrl);\r\n  const productDiscardJson = await productDiscardResponse.json();\r\n  return productDiscardJson;\r\n}\r\n\r\nexport {\r\n  getProductSaleList,\r\n  getProductDiscardList\r\n};","import React from 'react';\r\nimport {\r\n  List,\r\n  message,\r\n  Spin,\r\n  Dropdown,\r\n  Menu,\r\n  Button,\r\n  DatePicker,\r\n  Input\r\n} from 'antd';\r\nimport { getProductSaleList } from '../api/api';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/zh-cn';\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport moment from 'moment';\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst KPageSize = 20;\r\nconst KShopArray = [\r\n  { index: 0, name: '全部', userId: '' },\r\n  { index: 1, name: '教育局', userId: '3995767' },\r\n  { index: 2, name: '旧镇', userId: '3995771' },\r\n  { index: 3, name: '江滨', userId: '4061089' },\r\n  { index: 4, name: '汤泉', userId: '4061092' }\r\n];\r\n\r\nclass ProductSale extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let query = this.props.query;\r\n    let beginDateTime = '';\r\n    let endDateTime = '';\r\n    if (query) {\r\n      beginDateTime = query.get('beginDateTime');\r\n      beginDateTime = beginDateTime.replace(' ', '+');// +号会变成空格，替换回来\r\n\r\n      endDateTime = query.get('endDateTime');\r\n      endDateTime = endDateTime.replace(' ', '+');// +号会变成空格，替换回来\r\n    }\r\n\r\n    this.state = {\r\n      listData: [],\r\n      loading: false,\r\n      hasMore: true,\r\n      pageIndex: 1,\r\n      shopIndex: 1,\r\n      userId: '',\r\n      beginDateTime: beginDateTime,\r\n      endDateTime: endDateTime,\r\n      keyword: ''\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let query = this.props.query;\r\n    let userId = '';\r\n    if (query) {\r\n      userId = query.get('id');\r\n    }\r\n\r\n    await this.initFirstPage(userId);\r\n  }\r\n\r\n  async initFirstPage(userId, beginDateTime, endDateTime, keyword) {\r\n    for (let index = 0; index < KShopArray.length; index++) {\r\n      if (KShopArray[index].userId === userId) {\r\n        this.setState({ shopIndex: index })\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      userId: userId !== undefined ? userId : this.state.userId,\r\n      listData: [],\r\n      loading: false,\r\n      hasMore: true,\r\n      pageIndex: 1,\r\n      beginDateTime: beginDateTime !== undefined ? beginDateTime : this.state.beginDateTime,\r\n      endDateTime: endDateTime !== undefined ? endDateTime : this.state.endDateTime,\r\n      keyword: keyword !== undefined ? keyword : this.state.keyword,\r\n    }, async () => {\r\n      await this.fetchNextPage();\r\n    });\r\n  }\r\n\r\n  async fetchNextPage() {\r\n    let { hasMore, pageIndex, listData } = this.state;\r\n    if (!hasMore) {\r\n      message.warning('没有更多数据了');\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      const { userId, beginDateTime, endDateTime, keyword } = this.state;\r\n      let saleList = [];\r\n      const productSale = await getProductSaleList(userId, beginDateTime, endDateTime, pageIndex, KPageSize, keyword);\r\n      if (productSale && productSale.errCode === 0) {\r\n        saleList = productSale.list;\r\n      }\r\n      const newHasMore = saleList.length / KPageSize >= 1;\r\n      let newPageIndex = pageIndex;\r\n      if (newHasMore) newPageIndex++;\r\n      listData = listData.concat(saleList);\r\n\r\n      this.setState({\r\n        listData: listData,\r\n        hasMore: newHasMore,\r\n        loading: false,\r\n        pageIndex: newPageIndex\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInfiniteOnLoad = async () => {\r\n    await this.fetchNextPage();\r\n  };\r\n\r\n  render() {\r\n    const { shopIndex, beginDateTime, endDateTime } = this.state;\r\n\r\n    let shopName = KShopArray[shopIndex].name;\r\n    return (\r\n      <div style={{ height: window.innerHeight, overflow: \"auto\" }}>\r\n        <div style={{ textAlign: 'center', fontSize: 24, fontWeight: \"bold\" }}>\r\n          热卖商品\r\n          <br />\r\n          <Dropdown\r\n            overlay={\r\n              () => {\r\n                let shop0 = KShopArray[0];\r\n                let shop1 = KShopArray[1];\r\n                let shop2 = KShopArray[2];\r\n                let shop3 = KShopArray[3];\r\n                let shop4 = KShopArray[4];\r\n\r\n                return (\r\n                  <Menu onClick={async ({ key }) => {\r\n                    let userId = KShopArray[key].userId;\r\n                    await this.initFirstPage(userId);\r\n                  }} >\r\n                    <Menu.Item key={shop0.index}>{shop0.name}</Menu.Item>\r\n                    <Menu.Item key={shop1.index}>{shop1.name}</Menu.Item>\r\n                    <Menu.Item key={shop2.index}>{shop2.name}</Menu.Item>\r\n                    <Menu.Item key={shop3.index}>{shop3.name}</Menu.Item>\r\n                    <Menu.Item key={shop4.index}>{shop4.name}</Menu.Item>\r\n                  </Menu>)\r\n              }\r\n            } trigger={['click']}>\r\n            <Button size=\"small\" style={{ width: 240 }} onClick={e => e.preventDefault()}>\r\n              {shopName}\r\n              <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          <br />\r\n          <RangePicker size='small' locale={locale}\r\n            bordered={true}\r\n            style={{ width: 320 }}\r\n            placeholder={['开始时间', '结束时间']}\r\n            inputReadOnly={true}\r\n            defaultValue={[moment(beginDateTime, 'YYYY.MM.DD+HH:mm:ss'),\r\n            moment(endDateTime, 'YYYY.MM.DD+HH:mm:ss')]}\r\n            showTime={{\r\n              hideDisabledOptions: true,\r\n              defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('11:59:59', 'HH:mm:ss')],\r\n              showTime: true,\r\n              showHour: false,\r\n              showMinute: false,\r\n              showSecond: false\r\n            }}\r\n            onChange={(data) => {\r\n              if (!data) {\r\n                message.warning('请选择正确的日期!');\r\n                return;\r\n              };\r\n            }} onOk={async (data) => {\r\n              await this.initFirstPage(undefined,\r\n                data[0] ? data[0].format('YYYY.MM.DD+HH:mm:ss') : undefined,\r\n                data[1] ? data[1].format('YYYY.MM.DD+HH:mm:ss') : undefined);\r\n            }} />\r\n          <br />\r\n          <Search style={{ width: 280 }} size=\"small\" placeholder=\"输入商品名称后查询\" enterButton=\"查询\"\r\n            onSearch={async value => {\r\n              await this.initFirstPage(undefined, undefined, undefined, value);\r\n            }\r\n            } />\r\n        </div>\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={this.handleInfiniteOnLoad}\r\n          hasMore={!this.state.loading && this.state.hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            dataSource={this.state.listData}\r\n            locale={{ emptyText: '暂时没有数据' }}\r\n            footer={\r\n              <div style={{ height: 100, textAlign: 'center', fontSize: 14, fontWeight: \"lighter\" }}>\r\n                弯麦--心里满满都是你\r\n            </div>\r\n            }\r\n            renderItem={\r\n              item => {\r\n                let index = this.state.listData.indexOf(item);\r\n                let indexDivBC = \"gray\";\r\n                if (index === 0) {\r\n                  indexDivBC = \"orange\";\r\n                } else if (index === 1) {\r\n                  indexDivBC = \"green\";\r\n                } else if (index === 2) {\r\n                  indexDivBC = \"red\";\r\n                }\r\n\r\n                let specification = item.specification !== '-' ? ' | ' + item.specification : '';\r\n                let category = item.category !== '' ? ' | ' + item.category : '';\r\n\r\n                return (<List.Item>\r\n                  <div style={{\r\n                    width: 30, height: 30, backgroundColor: indexDivBC, color: \"white\",\r\n                    fontSize: 14, fontWeight: \"bold\", textAlign: 'center', marginRight: 15,\r\n                    marginLeft: 15, borderRadius: 10\r\n                  }}>\r\n                    <div style={{ marginTop: 3 }}>{index + 1}</div>\r\n                  </div>\r\n\r\n                  <List.Item.Meta\r\n                    title={(\r\n                      <div>\r\n                        <span style={{ fontSize: 16 }}>\r\n                          {item.name}\r\n                        </span>\r\n                        <span style={{ fontSize: 12 }}>\r\n                          {specification}\r\n                        </span>\r\n                        <span style={{ fontSize: 10 }}>\r\n                          {category}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    description={`销售数量：${item.saleNumber} 现有库存：${item.currentNumber}`}\r\n                  />\r\n                  <span style={{\r\n                    marginRight: 25, color: \"coral\", fontSize: 18\r\n                  }}>\r\n                    {`￥${item.realIncome}`}\r\n                  </span>\r\n                </List.Item>)\r\n              }\r\n            }\r\n          >\r\n            {this.state.loading && this.state.hasMore && (\r\n              <div>\r\n                <Spin style={{ position: \"absolute\", bottom: 15, width: '100%', textAlign: 'center' }} />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductSale;\r\n","import React from 'react';\r\nimport { List } from 'antd';\r\nimport { getProductDiscardList } from '../api/api';\r\n\r\nclass ProductDiscard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      listData: [],\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchListData();\r\n  }\r\n\r\n  async fetchListData() {\r\n    let { listData } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      let discardList = [];\r\n      const productDiscard = await getProductDiscardList(\r\n        this.props.query.get('id'),\r\n        this.props.query.get('date'));\r\n      if (productDiscard && productDiscard.errCode === 0) {\r\n        discardList = productDiscard.list;\r\n      }\r\n      listData = listData.concat(discardList);\r\n\r\n      this.setState({\r\n        listData: listData,\r\n        loading: false,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <List\r\n          dataSource={this.state.listData}\r\n          loading={this.state.loading}\r\n          locale={{ emptyText: '暂时没有数据' }}\r\n          header={\r\n            <div style={{ textAlign: 'center', fontSize: 24, fontWeight: \"bold\" }}>\r\n              报损商品\r\n                <span style={{ textAlign: 'center', fontSize: 13, fontWeight: \"lighter\" }}>\r\n                {`门店：${this.props.query.get('name')}，报损金额：¥ ${this.props.query.get('number')}`}\r\n              </span>\r\n            </div>\r\n          }\r\n          footer={\r\n            <div style={{ height: 100, textAlign: 'center', fontSize: 14, fontWeight: \"lighter\" }}>\r\n              弯麦--心里满满都是你\r\n            </div>\r\n          }\r\n          renderItem={\r\n            item => {\r\n              let index = this.state.listData.indexOf(item);\r\n              let indexDivBC = \"gray\";\r\n              if (index === 0) {\r\n                indexDivBC = \"orange\";\r\n              } else if (index === 1) {\r\n                indexDivBC = \"green\";\r\n              } else if (index === 2) {\r\n                indexDivBC = \"red\";\r\n              }\r\n\r\n              let specification = item.specification !== '-' ? ' | ' + item.specification : '';\r\n              let category = item.category !== '' ? ' | ' + item.category : '';\r\n              return (<List.Item>\r\n                <div style={{\r\n                  width: 30, height: 30, backgroundColor: indexDivBC, color: \"white\",\r\n                  fontSize: 14, fontWeight: \"bold\", textAlign: 'center', marginRight: 15,\r\n                  marginLeft: 15, borderRadius: 10\r\n                }}>\r\n                  <div style={{ marginTop: 3 }}>{index + 1}</div>\r\n                </div>\r\n\r\n                <List.Item.Meta\r\n                  title={(\r\n                    <div>\r\n                      <span style={{ fontSize: 16 }}>\r\n                        {item.name}\r\n                      </span>\r\n                      <span style={{ fontSize: 12 }}>\r\n                        {specification}\r\n                      </span>\r\n                      <span style={{ fontSize: 10 }}>\r\n                        {category}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  description={`报损数量：${item.discardNumber}`}\r\n                />\r\n                <span style={{\r\n                  marginRight: 25, color: \"coral\", fontSize: 18\r\n                }}>\r\n                  {`￥${item.diacardMoney}`}\r\n                </span>\r\n              </List.Item>)\r\n            }\r\n          }\r\n        >\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDiscard;\r\n","import React from \"react\";\r\nimport ProductSale from \"./view/productSale\";\r\nimport ProductDiscard from \"./view/productDiscard\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport './routerApp.css';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Inside4QueryParams() {\r\n  let query = useQuery();\r\n\r\n  return (\r\n    <div>\r\n      <Route exact path=\"/\" children={<ProductSale />} />\r\n      <Route path=\"/productsale\" children={<ProductSale query={query} />} />\r\n      <Route path=\"/discardsale\" children={<ProductDiscard query={query} />} />\r\n    </div>\r\n  );\r\n}\r\nexport default function RouterApp() {\r\n  return (\r\n    <Router>\r\n      <Inside4QueryParams />\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './routerApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}